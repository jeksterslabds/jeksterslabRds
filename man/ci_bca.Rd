% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ci_misc.R
\name{ci_bca}
\alias{ci_bca}
\title{Bias-Corrected and Accelerated Confidence Intervals}
\usage{
ci_bca(dist, est, fitFUN, data, ...)
}
\arguments{
\item{dist}{Sampling distribution of parameter estimate.}

\item{est}{Parameter estimate.}

\item{fitFUN}{Fit function.}

\item{data}{Sample data.}

\item{...}{Arguments to pass to \code{fitFUN}.}
}
\value{
Returns a vector with the following elements:
\describe{
\item{se}{Standard error.}
\item{z}{\code{z} statistic.}
\item{p}{\code{p}-value.}
\item{sig_001}{Logical. Tests if \code{p} < 0.001.}
\item{sig_01}{Logical. Tests if \code{p} < 0.01.}
\item{sig_05}{Logical. Tests if \code{p} < 0.05.}
\item{ll_001}{Lower limit. Alpha 0.001.}
\item{ll_01}{Lower limit. Alpha 0.01.}
\item{ll_05}{Lower limit. Alpha 0.05.}
\item{ul_05}{Upper limit. Alpha 0.05.}
\item{ul_01}{Upper limit. Alpha 0.01.}
\item{ul_001}{Upper limit. Alpha 0.001.}
\item{zero_hit_001}{Logical. Tests if \code{ll_001} < 0 < \code{ul_001}.}
\item{zero_hit_01}{Logical. Tests if \code{ll_01} < 0 < \code{ul_01}.}
\item{zero_hit_05}{Logical. Tests if \code{ll_05} < 0 < \code{ul_05}.}
\item{ci_width_001}{\code{ll_001} - \code{ul_001}.}
\item{ci_width_01}{\code{ll_01} - \code{ul_01}.}
\item{ci_width_05}{\code{ll_05} - \code{ul_05}.}
\item{ci_shape_001}{Confidence interval shape. Alpha 0.001.}
\item{ci_shape_01}{Confidence interval shape. Alpha 0.01.}
\item{ci_shape_05}{Confidence interval shape. Alpha 0.05.}
}
Note that \code{se}, \code{z}, \code{p}, and \code{sig}
are based on the normal theory.
Confidence limits for \code{\link{ci_wald}} are based on the normal theory.
Ajustments for asymmetry for \code{\link{ci_bc}}
and \code{\link{ci_bca}} are made in the confidence limits.
}
\description{
Generates confidence intervals with bias-correction and acceleration.
}
\examples{
B <- 5
Sigma <- matrix(
  data = c(
    225, 112.50, 56.25,
    112.5, 225, 112.5,
    56.25, 112.50, 225
  ),
  ncol = 3
)
data <- dat_mvn(
  n = 100,
  Sigma = Sigma,
  mu = c(100, 100, 100)
)
est <- med_simple(data = data, minimal = TRUE)
boot_nb_resamples <- boot_nb(data = data, B = B)
nb <- boot_fit(boot_resamples = boot_nb_resamples, fitFUN = med_simple, minimal = TRUE)
n <- nrow(data)
est_Sigma <- cov(data)
est_mu <- colMeans(data)
boot_pb_resamples <- boot_pb(n = n, Sigma = est_Sigma, mu = est_mu, B = B)
pb <- boot_fit(boot_resamples = boot_pb_resamples, fitFUN = med_simple, minimal = TRUE)
nb_ci_bca <- ci_bca(dist = nb, est = est, fitFUN = med_simple, data = data, minimal = TRUE)
pb_ci_bca <- ci_bca(dist = pb, est = est, fitFUN = med_simple, data = data, minimal = TRUE)
}
\seealso{
Other confidence interval functions: 
\code{\link{ci_bc}()},
\code{\link{ci_quantile}()},
\code{\link{ci_wald}()}
}
\concept{confidence interval functions}
\keyword{ci}
